@model Simulador.Models.Dato

@{
    ViewBag.Title = "Create";
}
    <div class="jumbotron">
        <h1>Simulador de Temperatura</h1>
        <p class="lead">Aplicación web que simula la temperatura del agua dentro de un tanque respecto del tiempo y temperatura deseada.</p>
    </div>
<h2>Configuracion Inicial </h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
   <div class="bodycontent"> 
    <div class="form-horizontal">
        <h3>Datos</h3>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.cap_max_tanque, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.cap_max_tanque, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cap_max_tanque, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.temp_inicial_tanque, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.temp_inicial_tanque, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.temp_inicial_tanque, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.material_tanque, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.material_tanque, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.material_tanque, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.resistencia_watts, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.resistencia_watts, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.resistencia_watts, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cant_ml_s, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.cant_ml_s, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cant_ml_s, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.cant_ml_incial, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.cant_ml_incial, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cant_ml_incial, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
  </div>
}

<div>
    @Html.ActionLink("Regresar a la lista", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
